// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using NaCoDoKina.Api.Data;
using System;

namespace NaCoDoKina.Api.Migrations.Application
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20170923125347_InitializeDataModel")]
    partial class InitializeDataModel
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.0.0-rtm-26452");

            modelBuilder.Entity("NaCoDoKina.Api.Entities.Cinema", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<long?>("CinemaNetworkId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(225);

                    b.Property<long?>("UrlId");

                    b.HasKey("Id");

                    b.HasIndex("CinemaNetworkId");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.HasIndex("UrlId");

                    b.ToTable("Cinemas");
                });

            modelBuilder.Entity("NaCoDoKina.Api.Entities.CinemaNetwork", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<long?>("UrlId");

                    b.HasKey("Id");

                    b.HasIndex("UrlId");

                    b.ToTable("CinemaNetworks");
                });

            modelBuilder.Entity("NaCoDoKina.Api.Entities.DeletedMovies", b =>
                {
                    b.Property<long>("MovieId");

                    b.Property<long>("UserId");

                    b.HasKey("MovieId", "UserId");

                    b.ToTable("DeletedMovieMarks");
                });

            modelBuilder.Entity("NaCoDoKina.Api.Entities.Movie", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("PosterUrl");

                    b.HasKey("Id");

                    b.ToTable("Movies");
                });

            modelBuilder.Entity("NaCoDoKina.Api.Entities.MovieDetails", b =>
                {
                    b.Property<long>("Id");

                    b.Property<string>("AgeLimit");

                    b.Property<string>("CrewDescription");

                    b.Property<string>("Description");

                    b.Property<string>("Director");

                    b.Property<string>("Genre");

                    b.Property<string>("Language");

                    b.Property<TimeSpan>("Length");

                    b.Property<long>("MovieId");

                    b.Property<string>("OriginalTitle");

                    b.Property<DateTime>("ReleaseDate");

                    b.HasKey("Id");

                    b.ToTable("Movies");
                });

            modelBuilder.Entity("NaCoDoKina.Api.Entities.MovieShowtime", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<long?>("CinemaId");

                    b.Property<string>("Language");

                    b.Property<long?>("MovieId");

                    b.Property<DateTime>("ShowTime");

                    b.Property<string>("ShowType");

                    b.HasKey("Id");

                    b.HasIndex("CinemaId");

                    b.HasIndex("MovieId");

                    b.ToTable("MovieShowtimes");
                });

            modelBuilder.Entity("NaCoDoKina.Api.Entities.ServiceUrl", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<long?>("MovieDetailsId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255);

                    b.Property<string>("Url")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("MovieDetailsId");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("ServiceUrl");
                });

            modelBuilder.Entity("NaCoDoKina.Api.Entities.Cinema", b =>
                {
                    b.HasOne("NaCoDoKina.Api.Entities.CinemaNetwork", "CinemaNetwork")
                        .WithMany()
                        .HasForeignKey("CinemaNetworkId");

                    b.HasOne("NaCoDoKina.Api.Entities.ServiceUrl", "Url")
                        .WithMany()
                        .HasForeignKey("UrlId");

                    b.OwnsOne("NaCoDoKina.Api.Entities.Location", "Location", b1 =>
                        {
                            b1.Property<long>("CinemaId");

                            b1.Property<double>("Latitude");

                            b1.Property<double>("Longitude");

                            b1.ToTable("Cinemas");

                            b1.HasOne("NaCoDoKina.Api.Entities.Cinema")
                                .WithOne("Location")
                                .HasForeignKey("NaCoDoKina.Api.Entities.Location", "CinemaId")
                                .OnDelete(DeleteBehavior.Cascade);
                        });
                });

            modelBuilder.Entity("NaCoDoKina.Api.Entities.CinemaNetwork", b =>
                {
                    b.HasOne("NaCoDoKina.Api.Entities.ServiceUrl", "Url")
                        .WithMany()
                        .HasForeignKey("UrlId");
                });

            modelBuilder.Entity("NaCoDoKina.Api.Entities.MovieDetails", b =>
                {
                    b.HasOne("NaCoDoKina.Api.Entities.Movie")
                        .WithOne("Details")
                        .HasForeignKey("NaCoDoKina.Api.Entities.MovieDetails", "Id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("NaCoDoKina.Api.Entities.MovieShowtime", b =>
                {
                    b.HasOne("NaCoDoKina.Api.Entities.Cinema", "Cinema")
                        .WithMany()
                        .HasForeignKey("CinemaId");

                    b.HasOne("NaCoDoKina.Api.Entities.Movie", "Movie")
                        .WithMany()
                        .HasForeignKey("MovieId");
                });

            modelBuilder.Entity("NaCoDoKina.Api.Entities.ServiceUrl", b =>
                {
                    b.HasOne("NaCoDoKina.Api.Entities.MovieDetails")
                        .WithMany("DescriptionSites")
                        .HasForeignKey("MovieDetailsId");
                });
#pragma warning restore 612, 618
        }
    }
}
